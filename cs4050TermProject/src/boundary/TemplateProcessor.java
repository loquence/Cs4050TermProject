package boundary;

import java.io.IOException;
import java.io.Writer;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import freemarker.template.Configuration;
import freemarker.template.SimpleHash;
import freemarker.template.Template;
import freemarker.template.TemplateException;
import freemarker.template.TemplateExceptionHandler;

public class TemplateProcessor {

	//Object values for the templateProcessor
	private String templateDir;
	
	private Configuration cfg;
	
	/**
	 * 
	 * @param templateDir
	 * @param servletContext
	 */
	public TemplateProcessor(String templateDir, ServletContext servletContext) {
		this.templateDir   = templateDir;//sets the templateDir
		cfg = new Configuration(Configuration.VERSION_2_3_25);//Sets the version
		cfg.setServletContextForTemplateLoading(servletContext, templateDir);//set the servletContext
		cfg.setTemplateExceptionHandler(TemplateExceptionHandler.HTML_DEBUG_HANDLER);//Sets the exception handler, which outputs errors in html on failure
	}
	
	/**
	 * processes a template using these params passed
	 * @param templateName
	 * @param root
	 * @param request
	 * @param response
	 */
	public void processTemplate(String templateName, SimpleHash root, HttpServletRequest request, HttpServletResponse response) {
		
		Template template = null;//template object
		try {
			template = cfg.getTemplate(templateName);//sets the template to the passed templateName
		} catch (IOException e) {
			e.printStackTrace();//prints stack trace on failure
		}

		try {
			
			Writer out = response.getWriter();//gets response writer
			response.setContentType("text/html");//sets content type
			template.process(root, out);//calls the process method on template, which loads the template into the writer
		} catch (TemplateException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	} // end of processTemplate	

	
	
	//Autogenerated getters and setters
	
	public String getTemplateDir() {
		return templateDir;
	}

	public void setTemplateDir(String templateDir) {
		this.templateDir = templateDir;
	}

	public Configuration getCfg() {
		return cfg;
	}

	public void setCfg(Configuration cfg) {
		this.cfg = cfg;
	}
	
	
}
